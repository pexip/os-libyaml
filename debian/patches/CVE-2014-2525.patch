# HG changeset patch
# User Kirill Simonov <xi@resolvent.net>
# Date 1395835397 18000
# Node ID bce8b60f0b9af69fa9fab3093d0a41ba243de048
# Parent  d7cb9c2731c01fb5465dd61a14ebd42ce258518d
Fixed heap overflow in yaml_parser_scan_uri_escapes (Thanks Ivan Fratric of the Google Security Team).

Index: libyaml-0.1.4/src/scanner.c
===================================================================
--- libyaml-0.1.4.orig/src/scanner.c	2014-04-02 11:37:57.992175108 -0400
+++ libyaml-0.1.4/src/scanner.c	2014-04-02 11:37:57.984175108 -0400
@@ -2629,6 +2629,9 @@
         /* Check if it is a URI-escape sequence. */
 
         if (CHECK(parser->buffer, '%')) {
+            if (!STRING_EXTEND(parser, string))
+                goto error;
+
             if (!yaml_parser_scan_uri_escapes(parser,
                         directive, start_mark, &string)) goto error;
         }
Index: libyaml-0.1.4/src/yaml_private.h
===================================================================
--- libyaml-0.1.4.orig/src/yaml_private.h	2014-04-02 11:37:57.992175108 -0400
+++ libyaml-0.1.4/src/yaml_private.h	2014-04-02 11:37:57.988175108 -0400
@@ -134,9 +134,12 @@
      (string).start = (string).pointer = (string).end = 0)
 
 #define STRING_EXTEND(context,string)                                           \
-    (((string).pointer+5 < (string).end)                                        \
+    ((((string).pointer+5 < (string).end)                                       \
         || yaml_string_extend(&(string).start,                                  \
-            &(string).pointer, &(string).end))
+            &(string).pointer, &(string).end)) ?                                \
+         1 :                                                                    \
+        ((context)->error = YAML_MEMORY_ERROR,                                  \
+         0))
 
 #define CLEAR(context,string)                                                   \
     ((string).pointer = (string).start,                                         \
